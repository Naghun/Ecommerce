{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Budad\\\\Desktop\\\\frontend\\\\src\\\\utils\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport LoginPage from \"../pages/LoginPage\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const isAuthenticated = true; // Replace with your authentication logic\n\n  if (!isAuthenticated) {\n    navigate('/login');\n  }\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      ...rest,\n      element: isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(PrivateRoute, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Routes","Route","Navigate","LoginPage","useNavigate","jsxDEV","_jsxDEV","PrivateRoute","children","rest","_s","navigate","isAuthenticated","element","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Budad/Desktop/frontend/src/utils/PrivateRoute.js"],"sourcesContent":["import { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport LoginPage from \"../pages/LoginPage\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const navigate = useNavigate();\r\n    const isAuthenticated = true; // Replace with your authentication logic\r\n\r\n    if (!isAuthenticated) {\r\n        navigate('/login');\r\n    }\r\n\r\n    return (\r\n        <Routes>\r\n            <Route\r\n                {...rest}\r\n                element={isAuthenticated ? children : <Navigate to=\"/login\" />}\r\n            />\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAC1D,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,eAAe,GAAG,IAAI,CAAC,CAAC;;EAE9B,IAAI,CAACA,eAAe,EAAE;IAClBD,QAAQ,CAAC,QAAQ,CAAC;EACtB;EAEA,oBACIL,OAAA,CAACN,MAAM;IAAAQ,QAAA,eACHF,OAAA,CAACL,KAAK;MAAA,GACEQ,IAAI;MACRI,OAAO,EAAED,eAAe,GAAGJ,QAAQ,gBAAGF,OAAA,CAACJ,QAAQ;QAACY,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB,CAAC;AAACR,EAAA,CAhBIH,YAAY;EAAA,QACGH,WAAW;AAAA;AAAAe,EAAA,GAD1BZ,YAAY;AAkBlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}